一、盒模型由margin border padding content组成
W3C盒模型：width = content
IE盒模型：width = content + padding + border
转化方式： 
    box-sizing: content-box W3C盒模型
    box-sizing: border-box IE盒模型

二、水平居中
flex、position + transform、position + 负margin、
设置各个方向的距离都是0，再将margin设为auto，也可以实现，前提是inner宽高已知：
.outer {
    position: relative;
}
.inner {
    width: 100px;
    height: 100px;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    margin: auto;
}

三、css权重计算方式
!important > 行内样式 > ID选择器 > 类选择器 > 标签选择器 > 通配符选择器
内联样式，权值为1000
ID选择器，权值为0100
类，伪类和属性选择器，权值为0010
标签选择器和伪元素选择器，权值为0001
通配符、子选择器、相邻选择器等，权值为0000
继承的样式没有权值

四、清除浮动
方法一：clearfix
<div class="outer clearfix">
    <div class="inner">inner</div>
</div>
.outer{
    background: blue;
}
.inner{
    width: 100px;
    height: 100px;
    background: red;
    float: left;
}
.clearfix:after{
    content: "";
    display: block;
    height: 0;
    clear:both;
    visibility: hidden;
}
方法二：额外加一个div，clear:both
<div class="container">
    <div class="inner"></div>
    <div class="clear"></div>
</div>
.container{
    background: blue;
}
.inner {
    width: 100px;
    height: 100px;
    background: red;
    float: left;
}
.clear{
    clear:both;
}
方法三：触发父盒子BFC，overflow:hidden
<div class="outer">
    <div class="inner">inner</div>
</div>
.outer{
    background: blue;
    overflow: hidden;
}
.inner {
    width: 100px;
    height: 100px;
    background: red;
    float: left;
}

五、position属性
如果祖先元素是块级元素，包含块则设置为该元素的内边距边界。
如果祖先元素是行内元素，包含块则设置为该祖先元素的内容边界。

六、如何实现一个自适应的正方形
1）:
    .square {
        width: 10vw;
        height: 10vw;
        background: red;
    }
2):
    .square {
        width: 10%;
        padding-bottom: 10%; 
        height: 0; // 防止内容撑开多余的高度
        background: red;
    }

七、如何用css实现一个三角形
// clip-path: 创建一个只有元素的部分区域可以显示的剪切区域
.triangle {
    width: 30px;
    height: 30px;
    background: red;
    clip-path: polygon(0px 0px, 0px 30px, 30px 0px); // 将坐标(0,0),(0,30),(30,0)连成一个三角形
    transform: rotate(225deg); // 旋转225，变成下三角
}